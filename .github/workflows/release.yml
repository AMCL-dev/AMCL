name: Build Application

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12', '3.11', '3.10']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nuitka PySide6
        
    - name: Build with Nuitka
      run: |
        if [ "$RUNNER_OS" = "Windows" ]; then
          python -m nuitka -oAMCL --standalone --lto=yes --disable-ccache --include-data-dir=amcl/assets=assets --enable-plugin=pyside6 --jobs=2 --output-dir=build --remove-output --assume-yes-for-downloads --mingw64 --windows-console-mode=disable amcl/src/amcl.py
        elif [ "$RUNNER_OS" = "macOS" ]; then
          python -m nuitka -oAMCL --standalone --lto=yes --disable-ccache --include-data-dir=amcl/assets=assets --enable-plugin=pyside6 --jobs=2 --output-dir=build --remove-output --assume-yes-for-downloads --macos-create-app-bundle amcl/src/amcl.py
        else
          python -m nuitka -oAMCL --standalone --lto=yes --disable-ccache --include-data-dir=amcl/assets=assets --enable-plugin=pyside6 --jobs=2 --output-dir=build --remove-output --assume-yes-for-downloads amcl/src/amcl.py
        fi
        
    - name: Setup MSVC on Windows
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1
      
    - name: Build launcher on Windows
      if: matrix.os == 'windows-latest'
      run: |
        mkdir -p launcher/build
        cd launcher/build
        cmake ..
        cmake --build . --config Release -j 2
        
    - name: Package artifacts
      run: |
        mkdir -p dist
        if [ -d "build" ]; then
          mv build dist/amcl
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-python${{ matrix.python-version }}
        path: dist/
